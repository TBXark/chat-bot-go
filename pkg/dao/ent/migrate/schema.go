// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatConfigsColumns holds the columns for the "chat_configs" table.
	ChatConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "chat_id", Type: field.TypeInt64},
		{Name: "json", Type: field.TypeString, Size: 2147483647},
	}
	// ChatConfigsTable holds the schema information for the "chat_configs" table.
	ChatConfigsTable = &schema.Table{
		Name:       "chat_configs",
		Columns:    ChatConfigsColumns,
		PrimaryKey: []*schema.Column{ChatConfigsColumns[0]},
	}
	// ChatHistoriesColumns holds the columns for the "chat_histories" table.
	ChatHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "chat_id", Type: field.TypeInt64},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
	}
	// ChatHistoriesTable holds the schema information for the "chat_histories" table.
	ChatHistoriesTable = &schema.Table{
		Name:       "chat_histories",
		Columns:    ChatHistoriesColumns,
		PrimaryKey: []*schema.Column{ChatHistoriesColumns[0]},
	}
	// OpenAiTokensColumns holds the columns for the "open_ai_tokens" table.
	OpenAiTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Size: 52},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// OpenAiTokensTable holds the schema information for the "open_ai_tokens" table.
	OpenAiTokensTable = &schema.Table{
		Name:       "open_ai_tokens",
		Columns:    OpenAiTokensColumns,
		PrimaryKey: []*schema.Column{OpenAiTokensColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatConfigsTable,
		ChatHistoriesTable,
		OpenAiTokensTable,
	}
)

func init() {
}
